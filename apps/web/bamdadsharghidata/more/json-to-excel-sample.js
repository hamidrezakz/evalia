// اسکریپت تبدیل school_tables_sample.json به اکسل با داده نمونه و اعتبارسنجی عددی و بله/خیر
const ExcelJS = require("exceljs");
const fs = require("fs");

function getRandomInt(min, max) {
  return Math.floor(Math.random() * (max - min + 1)) + min;
}
function getRandomBool() {
  return Math.random() > 0.5 ? "بله" : "خیر";
}

async function jsonToExcelSample() {
  const data = JSON.parse(
    fs.readFileSync("./school_tables_sample.json", "utf8")
  );
  const workbook = new ExcelJS.Workbook();

  // شیت دانش‌آموزان
  const wsStudents = workbook.addWorksheet("دانش‌آموزان");
  wsStudents.addRow(["کدملی", "نام", "نام خانوادگی", "سن", "مقطع"]);
  data.students.forEach((s) => {
    wsStudents.addRow([s.id, s.firstName, s.lastName, s.age, s.grade]);
  });

  // شیت معلم‌ها
  const wsTeachers = workbook.addWorksheet("معلم‌ها");
  wsTeachers.addRow(["کدملی", "نام معلم", "نقش"]);
  data.teachers.forEach((t) => {
    wsTeachers.addRow([t.id, t.name, t.role]);
  });

  // تعریف ستون‌های هر ارزیابی
  const assessmentDefs = {
    فضایی: [
      "موضوع پردازی",
      "زیبایی ترسیم",
      "استفاده از ابتکارات",
      "ارتباط اجزا با هم",
      "اجرا به صورت کامل",
      "اجرا در نیمی از زمان",
      "اجرا تا پایان زمان",
      "اجرا تا پس از زمان انجام نشد",
      "پرداختن به موضوع جدید",
      "نواوری و خلاقیت",
      "همه اجزا مرتبط با هم",
      "رنگ اجزا مرتبط با هم",
      "کار تک رنگ",
      "دو جز مرتبط",
      "اجزا غیر مرتبز",
      "بیان 10 ایده نو",
      "بیان 5 تا 10",
      "انتخاب موضوع تکراری",
      "استفاده از ابزار های در دسترس",
      "نواوری خاص",
      "پایداری دقت",
      "دقت اجرا",
      "تمرکز",
    ],
    ریاضی: [
      "محاسبه",
      "آزمون و خطا",
      "فرضیه سازی",
      "بازی فکری",
      "الگویابی",
      "ارتباط میان روابط",
      "ایده های نو",
      "حل کردن",
      "سوال کردن",
      "کشف کردن",
      "تحقیق کردن",
      "اندازه گیری",
      "بیان اطلاعات در قالب جداول و نمودار",
      "حل مسئله",
      "علاقه مندی به علوم و ریاضی",
      "آزمایشگاه",
    ],
    "بدنی جنبشی": [
      "گرفتن",
      "بستن",
      "ساختن با دست",
      "هماهنگی حرکتی",
      "چالاکی",
      "تسلط بر بدن",
      "لمس کردن",
      "انعطاف پذیری",
      "تعادل",
      "تقلید حرکت",
      "ضربه زدن",
      "دایم در حرکت",
      "دست ورزی",
      "حرکات موزون",
      "سرعت عمل",
      "استفاده از ابزار ریز",
      "استفاده از ابزار درشت",
    ],
    "درون فردی": [
      "پشتکار",
      "بیان احساسات",
      "علاقه مند در فکر و رفتار",
      "ریسک کردن",
      "خودآگاهی",
      "فکر کردن",
      "خودمدار",
      "مستقل",
      "خاطره نویسی",
      "خودارزیابی",
      "خودشناسی",
      "نظم شخصی",
      "تعهد",
      "نیاز به سکوت",
      "خود انگیخته",
      "هدفمندی",
      "لذت از دانسته ها",
    ],
    "تله هوش": [
      "ضربه زدن به میز",
      "تنه زدن به دوستان",
      "عدم توانایی نشستن",
      "پرحرفی",
      "دروغگویی",
      "سخن چینی",
      "آزار کلامی",
      "بحث و جدل",
      "میان حرف دیگران پریدن",
      "تمایل شدید به گفتن حرف آخر",
      "ایجاد سر و صدای زیاد",
      "اسطوره ساختن از خواننده مورد علاقه",
      "حواس‌پرتی های بصری",
      "قضاوت افراد بر اساس ظاهر",
      "عیب جویی",
      "منفی گرایی",
      "کم مهارتی در جلب توجه",
      "تحمیل عقاید",
      "پرسیدن زیاد",
      "کنجکاوی های پر ریسک",
      "لجبازی و یکه حرفی",
      "دوستی با افرادی که نیازمند کمک وی می‌باشند",
      "عدم رعایت حد و مرز",
      "نزدیک شدن بیش از حد به دیگران",
      "کنترل گری",
      "نقص در خودکنترل گری",
      "کمکاوی های نابجا",
      "ترس قضاوت شدن توسط دیگران",
      "سردی",
      "خجالتی بودن زیاد",
      "خودمحوری",
      "منتقد درونی پرکار",
      "رفتار انفعالی",
    ],
  };

  // تعریف نوع داده هر ستون (عدد یا بله/خیر)
  const numericColumns = {
    فضایی: [
      "زیبایی ترسیم",
      "اجرا به صورت کامل",
      "اجرا در نیمی از زمان",
      "اجرا تا پایان زمان",
      "پایداری دقت",
      "دقت اجرا",
      "تمرکز",
    ],
    ریاضی: [
      "محاسبه",
      "آزمون و خطا",
      "فرضیه سازی",
      "الگویابی",
      "اندازه گیری",
      "حل مسئله",
    ],
    "بدنی جنبشی": [
      "چالاکی",
      "تعادل",
      "سرعت عمل",
      "انعطاف پذیری",
      "هماهنگی حرکتی",
    ],
    "درون فردی": ["پشتکار", "تعهد", "نظم شخصی", "هدفمندی"],
    "تله هوش": [],
  };
  const boolColumns = {
    فضایی: [
      "استفاده از ابتکارات",
      "پرداختن به موضوع جدید",
      "نواوری و خلاقیت",
      "همه اجزا مرتبط با هم",
      "کار تک رنگ",
      "دو جز مرتبط",
      "اجزا غیر مرتبز",
      "بیان 10 ایده نو",
      "بیان 5 تا 10",
      "انتخاب موضوع تکراری",
      "استفاده از ابزار های در دسترس",
      "نواوری خاص",
    ],
    ریاضی: [
      "بازی فکری",
      "ایده های نو",
      "حل کردن",
      "سوال کردن",
      "کشف کردن",
      "تحقیق کردن",
      "بیان اطلاعات در قالب جداول و نمودار",
      "علاقه مندی به علوم و ریاضی",
      "آزمایشگاه",
    ],
    "بدنی جنبشی": [
      "گرفتن",
      "بستن",
      "ساختن با دست",
      "تسلط بر بدن",
      "لمس کردن",
      "تقلید حرکت",
      "ضربه زدن",
      "دایم در حرکت",
      "دست ورزی",
      "حرکات موزون",
      "استفاده از ابزار ریز",
      "استفاده از ابزار درشت",
    ],
    "درون فردی": [
      "بیان احساسات",
      "علاقه مند در فکر و رفتار",
      "ریسک کردن",
      "خودآگاهی",
      "فکر کردن",
      "خودمدار",
      "مستقل",
      "خاطره نویسی",
      "خودارزیابی",
      "خودشناسی",
      "نیاز به سکوت",
      "خود انگیخته",
      "لذت از دانسته ها",
    ],
    "تله هوش": assessmentDefs["تله هوش"],
  };

  // شیت‌های ارزیابی
  Object.keys(assessmentDefs).forEach((type) => {
    const ws = workbook.addWorksheet(type);
    const columns = assessmentDefs[type];
    ws.addRow(["کدملی", "نام", "نام خانوادگی", "مقطع", ...columns]);
    data.students.forEach((s) => {
      const row = [s.id, s.firstName, s.lastName, s.grade];
      columns.forEach((col) => {
        if (numericColumns[type] && numericColumns[type].includes(col)) {
          row.push(getRandomInt(1, 20));
        } else if (boolColumns[type] && boolColumns[type].includes(col)) {
          row.push(getRandomBool());
        } else {
          row.push("");
        }
      });
      ws.addRow(row);
    });
    // Data Validation
    columns.forEach((col, idx) => {
      const colIdx = idx + 5; // چون 4 ستون اول اطلاعات دانش‌آموز است
      if (numericColumns[type] && numericColumns[type].includes(col)) {
        ws.getColumn(colIdx).eachCell((cell, rowNumber) => {
          if (rowNumber > 1) {
            cell.dataValidation = {
              type: "whole",
              operator: "between",
              showErrorMessage: true,
              formula1: "1",
              formula2: "20",
              error: "فقط عدد بین 1 تا 20 مجاز است.",
            };
          }
        });
      } else if (boolColumns[type] && boolColumns[type].includes(col)) {
        ws.getColumn(colIdx).eachCell((cell, rowNumber) => {
          if (rowNumber > 1) {
            cell.dataValidation = {
              type: "list",
              allowBlank: true,
              formulae: ['"بله,خیر"'],
              showErrorMessage: true,
              error: "فقط بله یا خیر مجاز است.",
            };
          }
        });
      }
    });
  });

  await workbook.xlsx.writeFile("./school_tables_sample.xlsx");
  console.log("school_tables_sample.xlsx ساخته شد.");
}

jsonToExcelSample();
